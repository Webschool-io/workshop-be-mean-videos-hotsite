// ================================================================================================
//
//  Mixins Module
//
//  All general purpose mixins are defined here.
//
// ================================================================================================

opacity($value) {
  opacity: $value;
  -ms-filter: 'progid:DXImageTransform.Microsoft.Alpha(Opacity="$value * 100")';
  filter: alpha(opacity = $value * 100);
  zoom: 1;
}

// ================================================================================================
//	Mixins for list elements
// ================================================================================================

list-nostyle() {
  list-style: none;
  padding: 0;
  margin: 0;

  li {
    margin: 0;
  }
}

list-horizontal() {
	list-nostyle();

	li {
		display: inline-block;
	}
}

inline-block() {
  display: inline-block;
  vertical-align: baseline;
  zoom: 1;
  *display: inline;
  *vertical-align: auto;
}

// ================================================================================================
//	Mixin for define a input placeholder color
// ================================================================================================

placeholder($color) {
  &::-webkit-input-placeholder {
    color: $color;
  }
  &:-moz-placeholder {
    color: $color;
  }
  &::-moz-placeholder {
    color: $color;
  }
  &:-ms-input-placeholder {
    color: $color;
  }
}

// ================================================================================================
//	Mixin to use a css3 technicals in html elements
// ================================================================================================

image-replacement() {
  a {
    display: block;
    width: 100%;
    height: 100%;
    overflow: hidden;
    text-indent: 100%;
    nowrap();
  }
}

pseudo-element() {
  position: absolute;
  display: block;
  content: '';
}

// ================================================================================================
//  Mixins for animation with CSS3
// ================================================================================================

animation($content) {
  animation: $content;
  -moz-animation: $content;
  -webkit-animation: $content;
}

animation-duration($timeout) {
  animation-duration: $timeout;
  -moz-animation-duration: $timeout;
  -webkit-animation-duration: $timeout;
}

animation-delay($timeout) {
  animation-delay: $timeout;
  -moz-animation-delay: $timeout;
  -webkit-animation-delay: $timeout;
}

animation-iteration-count($times) {
  animation-iteration-count: $times;
  -moz-animation-iteration-count: $times;
  -webkit-animation-iteration-count: $times;
}

keyframes($name) {
  @keyframes {$name} { @content; }
  @-moz-keyframes {$name} { @content; }
  @-webkit-keyframes {$name} { @content; }
}

// ================================================================================================
//  Mixins for text legibility in all browsers
// ================================================================================================

font-smothing($method = antialiased) {
  -webkit-font-smoothing: $method;
  -moz-font-smoothing: $method;
  -ms-font-smoothing: $method;
  font-smoothing: $method;
}

text-stroke($size, $color) {
  -webkit-text-stroke: $size $color;
  -moz-text-stroke: $size $color;
  -ms-text-stroke: $size $color;
  text-stroke: $size $color;
}

// ================================================================================================
//  Mixin to create a box-shadow/text-shadow with a custom color
// ================================================================================================

shadow($type, $height, $color, $factor) {
  if $type == "box" {
    box-shadow: 0 $height 0 darken($color $factor);
  }
  else if $type == "text" {
    text-shadow: 0 $height 0 darken($color $factor);
  }
}
